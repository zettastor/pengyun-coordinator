#
# Copyright (c) 2022. PengYunNetWork
#
# This program is free software: you can use, redistribute, and/or modify it
# under the terms of the GNU Affero General Public License, version 3 or later ("AGPL"),
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
#  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  You should have received a copy of the GNU Affero General Public License along with
#  this program. If not, see <http://www.gnu.org/licenses/>.
#

# properties for health checker configuration
app.main.endpoint=2234
app.name=Coordinator
app.location=r=PY;d=PY;c=PY;h=PY
health.checker.rate=1000
local.dih.port=10000
info.center.instance.name=InfoCenter
control.center.instance.name=ControlCenter
thrift.request.timeout.ms=30000
thrift.connect.timeout.ms=20000
netty.request.timeout.ms=5000
netty.connect.timeout.ms=10000
ping.host.timeout.ms=50
network.connection.detect.retry.maxtimes=5
network.connection.detect.server.listening.port=54321
### max write frame size of network: 1Mbps
max.write.data.size.per.request=1048576
### max read frame size of network: 1Mbps
max.read.data.size.per.request=1048576
### max network pending size for some channel
max.channel.pending.size.mb=1024
# set page package count
page.wrapped.count=128
# send log result after no request occours
send.log.result.after.no.request.ms=2000
# resend delay time unit(ms)
resend.delay.time.unit.ms=100
convert.position.type=stripe
# usually do not use these two configuration, just for debug purpose
data.storage.path=/var/storage/log
data.storage.size.gb=50
network.checksum.algorithm=DIGEST
### ***log4j properties*** ###
log.level=WARN
log.output.file=logs/coordinator.log
enable.logger.tracer=false
## default 1000ms is max timeout we can accept for now
debug.io.timeout.threshold.ms=1000
# coordinator io model
stream.io=false
# report driver info interval time ms
report.driver.info.interval.time.ms=1000
io.depth=128
# usually this filed can not bigger than 1000ms
try.send.io.semaphore.timeout.ms=100
try.semaphore.max.count.per.time=32
io.log.sequential.condition=8
performance.file.path=/opt/performance
